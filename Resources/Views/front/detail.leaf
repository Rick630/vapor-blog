#extend("basefront"):

#export("head"):
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<style>
    .quill-custom-theme .ql-editor {
        font-size: 18px;
        line-height: 1.6;
        font-family: "思源宋体", "Source Han Serif", "微软雅黑", "Microsoft YaHei", "宋体", SimSun, sans-serif;
        padding: 0px;
    }

    /* 设置标题样式 */
    .ql-editor h1 {
        font-size: 36px;
        font-weight: bold;
    }

    .ql-editor h2 {
        font-size: 28px;
        font-weight: bold;
    }

    .ql-editor h3 {
        font-size: 20px;
        font-weight: bold;
    }
</style>
#endexport

#export("content"):

<div class="flex mx-20 mb-20">
    <div class="flex-1 flex flex-col">
        <div class="article">
            <h1 class="my-10 text-5xl ">#(data.title)</h1>
            <div class="flex flex-row items-center gap-4 mb-10">
                <div>#(data.owner.name)</div>
                <div>#date(data.createdAt, "yyyy-MM-dd")</div>
                <a class="btn bg-primary rounded-full" href="/list?listFor=category&categoryId=#(data.category.id)">#(data.category.name)</a>
            </div>
            <div id="postDetail" class="quill-custom-theme" style="border: none;"></div>
            <hr class="mt-10">
            <div class="flex flex-row gap-2 mt-5">
                #for(tag in data.tags):
                <a class="btn bg-gray-800 py-2 px-5 rounded-full" href="/list?listFor=tag&tagId=#(tag.id)">##(tag.name)</a>
                #endfor
            </div>
        </div>
        <div class="mt-20" x-data="{
            addedComment: {}
        }">
            <div class="text-3xl bold">评论</div>
            <div class="flex flex-col mt-8">
                <textarea x-model="addedComment.content"  class="textarea textarea-accent textarea-lg w-ful"  placeholder="发表评论"></textarea>
                <div class="flex flex-row justify-end">
                    <button data-id="#(data.id)" @click="addComment" class="btn bg-primary w-32 mt-4">发表评论</button>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <div class="text-2xl">全部评论</div>
            <!-- 评论列表内容 -->
            <div class="mt-10">
                <div class="flex flex-row justify-between">
                    <div class="text-xl">你是大傻</div>
                    <div>2023-08-06 10:00:05</div>
                </div>
                <div class="mt-2">这是我写的评论</div>
                <div class="mt-2">
                    <div class="btn">回复</div>
                </div>
            </div>

            <div class="mt-10">
                <div class="flex flex-row justify-between">
                    <div class="text-xl">你是大傻</div>
                    <div>2023-08-06 10:00:05</div>
                </div>
                <div class="my-4">这是我写的评论</div>
                <div class="mt-2">
                    <div class="btn">回复</div>
                </div>

                <div class="p-4 bg-neutral-focus rounded mt-4 ml-4">
                    <div>
                        <div class="flex flex-row justify-between">
                            <div class="text-xl">你是大傻2</div>
                            <div>2023-08-06 10:00:05</div>
                        </div>
                        <div class="mt-2">这是我写的回复😄</div>
                        <div class="mt-2">
                            <div class="btn">回复</div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <div class="flex flex-row justify-between">
                            <div class="text-xl">你是大傻2</div>
                            <div>2023-08-06 10:00:05</div>
                        </div>
                        <div class="mt-2">这是我写的回复😄</div>
                        <div class="mt-2">
                            <div class="btn">回复</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ml-4 w-72">
        <div class="flex flex-col sticky right-20 top-36 p-4 rounded border">
            <div class="text-3xl">目录</div>
            <div id="article-nav"></div>
        </div>
    </div>
</div>
<script>
    async function addComment(e) {
        this.addedComment.topicId = e.currentTarget.dataset.id;
        this.addedComment.topicType = 1; // 文章
        try {
            const response = await fetch('/post/comment', {
              method: 'POST',
              body: JSON.stringify(this.addedComment),
              headers: {
                'Content-Type': 'application/json'
              }
            });
            const data = await response.json();
            if (response.ok && data.code == 0) {
              showMySuccessToast("请求成功", () => {location.reload();});
              
            } else {
              showMyErrorToast(data.message ?? "请求失败");
            }
        } catch (error) {
            // 处理错误情况
            showMyErrorToast("发生异常:" + error);
        }
    }

</script>

<!-- 初始化编辑器 -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
    hljs.configure({   // optionally configure hljs
        languages: ['javascript', 'ruby', 'python', 'swift']
    });

    var Link = Quill.import('formats/link');

    class MyLink extends Link {
        static create(value) {
            let node = Link.create(value);
            value = Link.sanitize(value);
            node.setAttribute('href', value);
            if (value.startsWith("#")) {
                node.removeAttribute('target');
            } else {
                node.setAttribute("target", "_blank");
            }
            return node;
        }

        format(name, value) {
            super.format(name, value);

            if (name !== this.statics.blotName || !value) {
                return;
            }

            if (value.startsWith("#")) {
                this.domNode.removeAttribute("target");
            } else {
                this.domNode.setAttribute("target", "_blank");
            }
        }
    }
    Quill.register(MyLink);

    var linkIds = [];
    function getRandomId(domNode) {
        let _id = Math.random().toString(16).slice(2, 9);
        linkIds.push(_id);
        return _id;
    }

    var Header = Quill.import("formats/header")
    class MyHeader extends Header {
        constructor(domNode) {
            let a = super(domNode);
            domNode.setAttribute('id', getRandomId(domNode));
            this.cache = {};
        }

        static create(value) {
            const node = super.create();
            return node;
        }

        static formats(domNode) {
            return {
                id: domNode.getAttribute("id")
            };
        }
    }
    Quill.register("formats/header", MyHeader);
    MyHeader.blotName = "header"

    var quill = new Quill(document.createElement("div"), {
        theme: 'snow',
        readOnly: true,
        modules: {
            toolbar: false,
            syntax: true,
        }
    });
    var content = #unsafeHTML(data.content);
    quill.setContents(content)

    let index = 0;
    let linkHeaders = [];
    quill.getContents().ops.forEach(ops => {
        index++;
        if (ops?.attributes?.header) {
            if (quill.getContents().ops[index - 2].insert !== "\n") {
                linkHeaders.push(quill.getContents().ops[index - 2].insert.trim());
            }
        }
    });

    var headerNav = "";
    linkHeaders.forEach(h => {
        headerNav += `<li class="p-2 hover:bg-sky-700"><a href="#${h.replace(/\s/g, '-')}">${h}</a></li>`
    });

    headerNav = "<ul>" + headerNav + "</ul>"

    console.log(headerNav)

    document.getElementById("article-nav").innerHTML = headerNav;
    document.getElementById("postDetail").innerHTML = quill.container.innerHTML;

    // 先标记 id,然后将 id 进行替换未标题内容
    linkIds.forEach(hid => {
        try {
            var node = document.getElementById(hid);
            console.log(node)
            // 将空格变为-
            node.id = node.innerHTML.trim().replace(/\s/g, "-");
        } catch (error) {

        }
    });
</script>
#endexport
#endextend