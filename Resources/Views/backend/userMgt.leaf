#extend("basebackend"):

#export("head"):
<!-- <link href="/lib/choices/base.min.css" rel="stylesheet"> -->
<link href="/lib/choices/choices.min.css" rel="stylesheet">
<script src="/lib/choices/choices.min.js"></script>
#endexport

#export("contentRight"):
<div class="flex flex-col" x-data='{
  checkSels: [],
  isAllSelected: false,
  dataIds: #(dataIds),
  isEditPopupOpen: false,
  isAddPopupOpen: false,
  addedItem: {},
  editedItem: {},
  openEditPopup(tag) {
    #bjson("tag")
    this.editedItem = tag;
    this.isEditPopupOpen = true;
    roleChoices.setChoiceByValue(this.editedItem.roleIds)
  }
}'>   
    <div class="flex flex-row gap-5 mr-5 my-5">
        
    </div>
    <div class="overflow-x-auto">
        <table class="table">
          <!-- head -->
          <thead>
            <tr>
              <th>用户名</th>
              <th>邮箱</th>
              <th>角色</th>
              <th>操作</th>
            </tr>
          </thead>
          <tbody>
            #for(item in data.items):
            <tr>
              <td>
                <div class="flex items-center space-x-3">
                  #(item.name)
                </div>
              </td>
              <td>
                <div>#(item.email)</div>
              </td>
              <td>
                #for(role in item.roles):
                 <span class="p-2 rounded bg-gray-700">#(role.name)</span>
                #endfor
              </td>
              <td>
                <button class="btn" @click="openEditPopup('#jsonb(item)')">用户角色修改</button>
              </td>
            </tr>
            #endfor
          </tbody>
        </table>
        #extend("partial/pageCtrl")
      </div>

      <div x-cloak x-show="isEditPopupOpen" x-transition @click.away="isEditPopupOpen = false" class="fixed inset-1 flex flex-col items-center justify-center">
        <div class="bg-black p-10 rounded-lg shadow-lg w-11/12 max-w-5xl relative">
          <div class="flex flex-col gap-5">
            <button class="btn absolute right-2 top-2" @click="isEditPopupOpen = false">✕</button>
            <div class="text-3xl">修改用户角色</div>
            
            <label for="select-option-role" class="block font-medium">用户角色：</label>
            <select multiple id="select-option-role" class="roles-choice mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200 focus:border-blue-500">
                #for(role in optionRoles):
                <option value="#(role.id)" x-bind:selected="true">#(role.name)</option>
                #endfor
            </select>
            <button class="btn" @click="updateItem">提交</button>
          </div>
        </div>
      </div>
</div>
<script>

    const element = document.querySelector('.roles-choice');

    const roleChoices = new Choices(element, {removeItemButton: true});


  // 全选/未全选
  function toggleAllItemsSelection() {
    this.checkSels = this.isAllSelected ? []: this.dataIds;
  }

  // 单个选择
  function itemCheckboxChange() {
    this.isAllSelected = this.checkSels.length == this.dataIds.length;
  }

  // 更新
  async function updateItem() {
    try {
      // 获取选中的值
      this.editedItem.roleIds = roleChoices.getValue(true);
      const response = await fetch('/web/backend/user/update', {
        method: 'POST',
        body: JSON.stringify(this.editedItem),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await response.json();
      if (response.ok && data.code == 0) {
        // 从定向
        // 刷新当前页面
        location.reload();
        showMyToast("请求成功");
      } else {
        showMyErrorToast(data.message ?? "请求失败");
      }
    } catch (error) {
      // 处理错误情况
      showMyErrorToast("发生异常:" + error);
    }
  }

  // 删除
  async function deleteItems() {
    try {
      const response = await fetch('/web/backend/user/delete', {
        method: 'POST',
        body: JSON.stringify({ ids: this.checkSels }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await response.json();
      if (response.ok && data.code == 0) {
        showMyToast("请求成功");
        // 从定向
        // 刷新当前页面
        location.reload();
      } else {
        showMyErrorToast(data.message ?? "请求失败");
      }
    } catch (error) {
      // 处理错误情况
      showMyErrorToast("发生异常:" + error);
    }
  }
</script>

#endexport
#endextend