#extend("basebackend"):

#export("head"):
<!-- <link href="/lib/choices/base.min.css" rel="stylesheet"> -->
<link href="//cdn.staticfile.org/choices.js/10.2.0/choices.min.css" rel="stylesheet">
<script src="//cdn.staticfile.org/choices.js/10.2.0/choices.min.js"></script>
#endexport

#export("contentRight"):
<div class="flex flex-col" x-data='{
  checkSels: [],
  isAllSelected: false,
  dataIds: #(dataIds),
  isEditPopupOpen: false,
  isAddPopupOpen: false,
  addedItem: {},
  editedItem: {},
  openEditPopup(tag) {
    #bjson("tag")
    this.editedItem = tag;
    this.isEditPopupOpen = true;
    permissionChoices.setChoiceByValue(this.editedItem.permissionIds)
  }
}'>   
    <div class="flex flex-row gap-5 mr-5 my-5">
        <button class="btn btn-primary" @click="isAddPopupOpen=true">添加</button>
        <button class="btn btn-error" @click="deleteItems">删除</button>
    </div>
    <div class="overflow-x-auto">
        <table class="table">
          <!-- head -->
          <thead>
            <tr>
              <th>
                <label>
                  <input type="checkbox" class="checkbox border-gray-300" x-model="isAllSelected" @click="toggleAllItemsSelection" />
                </label>
              </th>
              <th>名称</th>
              <th>拥有权限</th>
              <th>操作</th>
            </tr>
          </thead>
          <tbody>
            #for(item in data.items):
            <tr>
              <th>
                <label>
                  <input type="checkbox" class="checkbox border-gray-300" x-model="checkSels" value="#(item.id)" x-on:change="itemCheckboxChange"/>
                </label>
              </th>
              <td>
                <div class="flex items-center space-x-3">
                  #(item.name)
                </div>
              </td>
              <td>
                <div class="max-w-md flex flex-row gap-2 flex-wrap">
                    #for(permission in item.permissions):
                    <span class="p-2 rounded bg-gray-700">#(permission.name)</span>
                    #endfor
                </div>
                
              </td>
              <td>
                <button class="btn" @click="openEditPopup('#jsonb(item)')">编辑</button>
              </td>
            </tr>
            #endfor
          </tbody>
        </table>
        #extend("partial/pageCtrl")
      </div>

      <div x-cloak x-show="isEditPopupOpen" x-transition @click.away="isEditPopupOpen = false" class="fixed inset-1 flex flex-col items-center justify-center">
        <div class="bg-black p-10 rounded-lg shadow-lg w-11/12 max-w-5xl relative">
          <div class="flex flex-col gap-5">
            <button class="btn absolute right-2 top-2" @click="isEditPopupOpen = false">✕</button>
            <div class="text-3xl">修改角色</div>
            <label for="tag-name" class="block font-medium">角色名称：</label>
            <input id="tag-name" type="text" x-model="editedItem.name" class="input" placeholder="角色名称" required>
            <label for="select-option-permission" class="block font-medium">拥有权限：</label>
            <select multiple id="select-option-permission" class="permissions-choice mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200 focus:border-blue-500">
                #for(perm in optionPermissions):
                <option value="#(perm.id)" >#(perm.name)</option>
                #endfor
            </select>
            <button class="btn" @click="updateItem">提交</button>
          </div>
        </div>
      </div>

      <div x-cloak x-show="isAddPopupOpen" x-transition @click.away="isAddPopupOpen = false" class="fixed inset-1 flex flex-col items-center justify-center">
        <div class="bg-black p-10 rounded-lg shadow-lg w-11/12 max-w-5xl relative">
          <div class="flex flex-col gap-5">
            <button class="btn absolute right-2 top-2" @click="isAddPopupOpen = false">✕</button>
            <div class="text-3xl">添加角色</div>
            <label for="tag-name" class="block font-medium">角色名称：</label>
            <input id="tag-name" type="text" x-model="addedItem.name" class="input" placeholder="角色名称" required>
            <button class="btn" @click="addItem">提交</button>
          </div>
        </div>
      </div>
</div>


<script>

  const element = document.querySelector('.permissions-choice');
  const permissionChoices = new Choices(element, {removeItemButton: true});


  // 全选/未全选
  function toggleAllItemsSelection() {
    this.checkSels = this.isAllSelected ? []: this.dataIds;
  }

  // 单个选择
  function itemCheckboxChange() {
    this.isAllSelected = this.checkSels.length == this.dataIds.length;
  }

  // 更新
  async function updateItem() {
    try {
      this.editedItem.permissionIds = permissionChoices.getValue(true)
      const response = await fetch('/web/backend/role/update', {
        method: 'POST',
        body: JSON.stringify(this.editedItem),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await response.json();
      if (response.ok && data.code == 0) {
        
        showMySuccessToast("请求成功", () => {location.reload();});
      } else {
        showMyErrorToast(data.message ?? "请求失败");
      }
    } catch (error) {
      // 处理错误情况
      showMyErrorToast("发生异常:" + error);
    }
  }

  // 删除
  async function deleteItems() {
    try {
      const response = await fetch('/web/backend/roles/delete', {
        method: 'POST',
        body: JSON.stringify({ ids: this.checkSels }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await response.json();
      if (response.ok && data.code == 0) {
        showMySuccessToast("请求成功", () => {location.reload();});
        
      } else {
        showMyErrorToast(data.message ?? "请求失败");
      }
    } catch (error) {
      // 处理错误情况
      showMyErrorToast("发生异常:" + error);
    }
  }

  // 新增
  async function addItem() {
    // 获取到富文本内容
    try {
        const response = await fetch('/web/backend/role', {
          method: 'POST',
          body: JSON.stringify(this.addedItem),
          headers: {
            'Content-Type': 'application/json'
          }
        });
        const data = await response.json();
        if (response.ok && data.code == 0) {
          this.isEditPopupOpen = true;
          showMySuccessToast("请求成功", () => {location.reload();});
        
        } else {
          showMyErrorToast(data.message ?? "请求失败");
        }
      } catch (error) {
        // 处理错误情况
        showMyErrorToast("发生异常:" + error);
      }

  }
</script>

#endexport
#endextend